[tox]
requires =
    tox>=4.2
    virtualenv>20.2
env_list =
    py{311, 310, 39, 38}
skip_missing_interpreters = true

[testenv]
description = Run the tests with {basepython}
deps =
    .[tests]
pass_env =
    TF_XLA_FLAGS
commands_pre =
    python -c "import sys, platform; print(f'Python: {sys.version_info.major}.{sys.version_info.minor}, Platform: {platform.system()}')"
    python -c "import sys; import subprocess; v=sys.version_info; linux=sys.platform=='linux'; needs=torch_install=(linux and (v.major==3 and v.minor in (9,10))); subprocess.check_call([sys.executable, '-m', 'pip', 'install', 'torch<2.0.0']) if needs else None"
commands =
    pytest -s -v {posargs}


[testenv:coverage]
description = Run the tests with coverage
base_python =

deps =
    {[testenv]deps}
    coverage
    pytest_cov
commands =
    python3 -m pytest --cov-report term --cov-report html:htmlcov --cov-report xml --cov=quantus {posargs}

[testenv:build]
description = Build environment
deps =
    build
    twine
commands =
    python -c "import shutil; shutil.rmtree('dist', ignore_errors=True)"
    python -m build .
    python -m twine check ./dist/* --strict


[testenv:lint]
description = Check the code style
deps =
    flake8
commands =
    python3 -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics  --exclude=venv,.tox
    python3 -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics  --exclude=venv,.tox

[testenv:type]
description = Run type checking
base_python = py310
deps =
    {[testenv]deps}
    mypy==0.982
commands =
    python3 -m mypy quantus

[testenv:dev]
description = Development environment
base_python = py310
package = editable
commands =

[gh]
python =
    3.8 = py38
    3.9 = py39
    3.10 = py310
    3.11 = py311

[flake8]
max-line-length = 127
max-complexity = 10