[tox]
requires =
    tox>=4.2
    virtualenv>=20.2
env_list =
    lint
    type
    py{310, 39, 38}
skip_missing_interpreters = true
labels =
    test = py310, py39, py38
    static = lint, type

[testenv]
description = run the tests with {basepython}
deps =
    -rrequirements_test.txt
pass_env =
    TF_XLA_FLAGS
commands =
    pytest -s -v {posargs}

[testenv:lint]
description = check the code style
deps =
    flake8
commands =
    flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics {posargs}
    flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics {posargs}

[testenv:type]
description = run type checking
deps =
    mypy==0.982
commands =
    mypy {toxinidir}/quantus {posargs}

[testenv:coverage]
description = run the tests with coverage
deps =
    {[testenv]deps}
    coverage[toml]
    pytest-cov
commands =
    pytest --cov-report term --cov-report html:htmlcov --cov-report xml --cov=quantus {posargs}

[testenv:docs]
description = invoke sphinx-build to build the HTML docs
deps =
    -rdocs/requirements_sphinx.txt
commands =
    sphinx-apidoc -o {toxinidir}/docs/source/docs_api quantus --module-first --separate --force
    sphinx-build -M html {toxinidir}/docs/source docs/build

[testenv:dev]
description = generate a DEV environment, that has all project libraries
base_python = python3.10
package = editable
deps =
    {[testenv]deps}
    black
    pytest_sugar
    pytest_xdist
commands =

[testenv:tf_only]
description = only TF is installed
deps =
    -rrequirements.txt
    pytest
    tensorflow>=2.12;sys_platform != "darwin"
    tensorflow_macos>=2.12;sys_platform == "darwin"
commands =
    pytest -s -v {posargs} {toxinidir}/tests/test_installation_extras.py::test_base_tf_installation

[testenv:torch_only]
description = only Torch is installed
deps =
    -rrequirements.txt
    captum>=0.6
    pytest
    torch>=1.13.1
    torchvision>=0.15.1
commands =
    pytest -s -v {posargs} {toxinidir}/tests/test_installation_extras.py::test_base_torch_installation

[testenv:tf_nlp]
description = TF for NLP is installed
deps =
    -rrequirements.txt
    nlpaug
    nltk>=3.8.1
    pytest
    tensorflow>=2.12;sys_platform != "darwin"
    tensorflow_macos>=2.12;sys_platform == "darwin"
    tensorflow_probability>=0.19
    tokenizers
    transformers>=4.26.1
commands =
    pytest -s -v {posargs} {toxinidir}/tests/test_installation_extras.py::test_tf_nlp_installation

[testenv:torch_nlp]
description = Torch for NLP is installed
deps =
    -rrequirements.txt
    captum>=0.6
    nlpaug
    nltk>=3.8.1
    pytest
    tokenizers
    torch>=1.13.1
    transformers>=4.26.1
commands =
    pytest -s -v {posargs} {toxinidir}/tests/test_installation_extras.py::test_torch_nlp_installation

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310
